{"version":3,"sources":["main.js"],"names":["divCode","document","querySelector","style","stringOrigin","n","speed","goNextStep","setTimeout","char","innerHTML","scrollIntoView","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,UAAUC,SAASC,aAAT,CAAuB,cAAvB,CAAd;AACA,IAAIC,QAAQF,SAASC,aAAT,CAAuB,cAAvB,CAAZ;AACA,IAAIE,65CAAJ;AAgDA,IAAIC,IAAI,CAAR;AACA,IAAIC,QAAQ,EAAZ;;AAEA,IAAIC,aAAa,SAAbA,UAAa,GAAM;AACnBC,eAAW,YAAM;AACb,YAAIC,OAAOL,aAAaC,CAAb,CAAX;AACAF,cAAMO,SAAN,IAAmBD,IAAnB;AACA,YAAIA,SAAS,IAAb,EAAmB;AACfA,mBAAO,MAAP;AACH,SAFD,MAEO,IAAIA,SAAS,GAAb,EAAkB;AACrBA,mBAAO,QAAP;AACH;AACDT,gBAAQU,SAAR,IAAqBD,IAArB;AACAT,gBAAQW,cAAR,CAAuB,KAAvB;AACA,YAAIN,IAAID,aAAaQ,MAAb,GAAsB,CAA9B,EAAiC;AAC7BP,gBAAIA,IAAI,CAAR;AACAE;AACH;AACJ,KAdD,EAcG,OAAOD,KAdV;AAeH,CAhBD;;AAkBAC","file":"main.940e9f66.map","sourceRoot":"../src","sourcesContent":["let divCode = document.querySelector('#drawProcess')\nlet style = document.querySelector('#renderStyle')\nlet stringOrigin = `\n/*\n你好，我是世清，\n这是我用 HTML + CSS 代码画出的太极图，\n给你展示一下绘制的过程✨\n*/\n/* \n首先准备一个 div#taiJi \n*/\n#taiJi {\n    box-shadow: 0 0 3px rgba(0, 0, 0.6);\n    width: 200px;\n    height: 200px;\n}\n\n/*\n接着，我们把 div 变成八卦中的太极。\n*/\n#taiJi {\n    border-radius: 50%;\n    background: linear-gradient(90deg, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 1) 49%, rgba(0, 0, 0, 1) 49%, rgba(0, 0, 0, 1) 100%);\n}\n\n/* \n准备两个神奇的小球，作为阴阳鱼的眼睛\n */\n#taiJi::before {\n    border: 1px solid black;\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    background: radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 1) 24%, rgba(0, 0, 0, 1) 26%, rgba(0, 0, 0, 1) 100%);\n    left: 50%;\n    transform: translateX(-50%);\n}\n\n#taiJi::after {\n    border: 1px solid white;\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    background: radial-gradient(circle, rgba(0, 0, 0, 1) 0%, rgba(0, 0, 0, 1) 24%, rgba(255, 255, 255, 1) 26%, rgba(255, 255, 255, 1) 100%);\n    left: 50%;\n    transform: translateX(-50%);\n    bottom: 0%;\n}\n\n`\nlet n = 1\nlet speed = 20\n\nlet goNextStep = () => {\n    setTimeout(() => {\n        let char = stringOrigin[n]\n        style.innerHTML += char\n        if (char === '\\n') {\n            char = '<br>'\n        } else if (char === ' ') {\n            char = '&nbsp;'\n        }\n        divCode.innerHTML += char\n        divCode.scrollIntoView(false)\n        if (n < stringOrigin.length - 1) {\n            n = n + 1\n            goNextStep()\n        }\n    }, 1000 / speed)\n}\n\ngoNextStep()"]}